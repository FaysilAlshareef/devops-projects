version: '3.8'

services:
  api:
    build:
      context: ./TalabatProject
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=db;Database=TalabatProjectDB;User Id=sa;Password=0101Fa0101!;TrustServerCertificate=True
      - ConnectionStrings__IdentityConnection=Server=db;Database=TalabatIdentityDB;User Id=sa;Password=0101Fa0101!;TrustServerCertificate=True
      - ConnectionStrings__Redis=redis:6379

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:4200', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - client
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root 
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=0101Fa0101!
    ports:
      - "1433:1433"
    volumes:
      - sqldata:/var/opt/mssql
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "0101Fa0101!" -Q "SELECT 1" || exit 1
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7.0.11
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  sqldata:
  redisdata: